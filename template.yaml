---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  github-ci-monitor

  Check the CI results of GitHub Repositories and send results to DataDog as Service Check.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: github-ci-monitor
    Description: Check the CI results of GitHub Repositories and send results to DataDog as Service Check.
    Author: Shunsuke Suzuki
    SpdxLicenseId: MIT
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ['GitHub', 'DataDog', 'CI', 'Monitoring']
    HomePageUrl: https://github.com/suzuki-shunsuke/github-ci-monitor
    SemanticVersion: 0.1.3
    SourceCodeUrl: https://github.com/suzuki-shunsuke/github-ci-monitor

Parameters:
  Config:
    Type: String
    Description: YAML
  Region:
    Type: String
    Description: AWS Region
    Default: !Sub ${AWS::Region}
  SecretId:
    Type: String
    Description: AWS Secrets Manager's Secret ID
    Default: github-ci-monitor
  CreateEventBridge:
    Type: String
    AllowedValues:
    - "true"
    - "false"
    Default: "false"
    Description: Whether Event Bridge is created
  EnabledEventBridge:
    Type: String
    AllowedValues:
    - "true"
    - "false"
    Default: "false"
    Description: Whether Event Bridge is enabled
  EventBridgeName:
    Type: String
    Description: Event Bridge Rule name
    Default: github-ci-monitor-trigger
  EventBridgeDescription:
    Type: String
    Description: Event Bridge Rule description
    Default: Run the Lambda Function periodically
  EventBridgeSchedule:
    Type: String
    Description: Event Bridge Rule schedule
    Default: 'cron(0/5 0-15,22,23 ? * MON-FRI *)'

Resources:
  GitHubCIMonitorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/github-ci-monitor-lambda
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Environment:
        Variables:
          CONFIG: !Ref Config
      Policies:
      - Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
            - secretsmanager:GetSecretValue
            Resource: !Sub arn:aws:secretsmanager:${Region}:${AWS::AccountId}:secret:${SecretId}-*
      Events:
        Schedule:
          Type: Schedule
          Condition: !Equals ["true", !Ref CreateEventBridge]
          Properties:
            Schedule: !Ref EventBridgeSchedule
            Name: !Ref EventBridgeName
            Description: !Ref EventBridgeDescription
            Enabled: !Equals ["true", !Ref EnabledEventBridge]
